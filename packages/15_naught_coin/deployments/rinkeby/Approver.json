{
  "address": "0x4D0a996a05093CAD73734d644bE82b6B8c2A83AD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "moveAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x30bd2b317fafec193276fa521683b1dff3ba6572fd6a063c767d9c93d09209b1",
  "receipt": {
    "to": null,
    "from": "0x66fA22aEfb2cF14c1fA45725c36C2542521C0d3E",
    "contractAddress": "0x4D0a996a05093CAD73734d644bE82b6B8c2A83AD",
    "transactionIndex": 42,
    "gasUsed": "185476",
    "logsBloom": "0x
    "blockHash": "0xf59642bdc55fcd2281b813fc5fce62ebedab86564e1f8e9ef9908039e5760af2",
    "transactionHash": "0x30bd2b317fafec193276fa521683b1dff3ba6572fd6a063c767d9c93d09209b1",
    "logs": [],
    "blockNumber": 9917022,
    "cumulativeGasUsed": "4924968",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x76f0a53Ebc815963c4E8caed31596118000cCd3A"
  ],
  "numDeployments": 1,
  "solcInputHash": "69614747c3539ead5f32f80213ec7b96",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"moveAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Approver.sol\":\"Approver\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Approver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IERC20 {\\n    function balanceOf(address _owner) external view returns (uint256 balance);\\n\\n    function transfer(address _to, uint256 _value)\\n        external\\n        returns (bool success);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool success);\\n\\n    function approve(address _spender, uint256 _value)\\n        external\\n        returns (bool success);\\n\\n    function allowance(address _owner, address _spender)\\n        external\\n        view\\n        returns (uint256 remaining);\\n}\\n\\n\\ncontract Approver {\\n    IERC20 private _token;\\n\\n    constructor(address token_) {\\n        _token = IERC20(token_);\\n    }\\n\\n    function moveAll() external {\\n        uint256 amount = _token.balanceOf(msg.sender);\\n        _token.transferFrom(msg.sender, address(this), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x549343888340a18f08f8deca5ad9251ecba1112dc9eafbf1347c301022e60e17\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161028438038061028483398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b6101f3806100916000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b997352714610030575b600080fd5b61003861003a565b005b600080546040516370a0823160e01b81526001600160a01b03909116906370a082319061006b903390600401610185565b60206040518083038186803b15801561008357600080fd5b505afa158015610097573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100bb919061016d565b6000546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906100f090339030908690600401610199565b602060405180830381600087803b15801561010a57600080fd5b505af115801561011e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101429190610146565b5050565b600060208284031215610157578081fd5b81518015158114610166578182fd5b9392505050565b60006020828403121561017e578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b03938416815291909216602082015260408101919091526060019056fea264697066735822122005f6ff40db1e3ff062bcc7f5e1f5508cacd5701e121d9cc641c3932bbb2ebdab64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b997352714610030575b600080fd5b61003861003a565b005b600080546040516370a0823160e01b81526001600160a01b03909116906370a082319061006b903390600401610185565b60206040518083038186803b15801561008357600080fd5b505afa158015610097573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100bb919061016d565b6000546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906100f090339030908690600401610199565b602060405180830381600087803b15801561010a57600080fd5b505af115801561011e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101429190610146565b5050565b600060208284031215610157578081fd5b81518015158114610166578182fd5b9392505050565b60006020828403121561017e578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b03938416815291909216602082015260408101919091526060019056fea264697066735822122005f6ff40db1e3ff062bcc7f5e1f5508cacd5701e121d9cc641c3932bbb2ebdab64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 50,
        "contract": "contracts/Approver.sol:Approver",
        "label": "_token",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)47"
      }
    ],
    "types": {
      "t_contract(IERC20)47": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      }
    }
  }
}